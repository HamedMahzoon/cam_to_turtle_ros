<launch>
	<arg name="launch_roswww" default="true" />
	<group if="$(arg launch_roswww)">
	       <include file="$(find roswww)/launch/roswww.launch">
	       		<arg name="port" value="8085" />
	       </include>
	</group>
	<!--group ns="ns1"-->
	      <node pkg="turtlesim" type="turtlesim_node" name="kame1" >
	      	    <remap from="turtle1/cmd_vel" to="vel_kame1"/>
	      </node>
	      <node pkg="turtlesim" type="turtle_teleop_key" name="hamed_key1" output="screen" >
	      	    <remap from="turtle1/cmd_vel" to="vel_kame1"/>
	      </node>
	      <node pkg="cam_to_turtle" type="cam_to_turtle_node" name="control_node" output="screen" >
	      	    <remap from="vel_turtle" to="vel_kame1" />
	      </node>
	      <!--node pkg="cam_to_turtle" type="test_input_sig_pub" name="test_sig_pub"  /-->
	<!--/group-->
	<!--group ns="ns2"/-->
	       <node pkg="turtlesim" type="turtlesim_node" name="kame2"  />
	       <node pkg="usb_cam" type="usb_cam_node" name="usb_cam" output="screen">
	       	     <param name="video_device" value="/dev/video0" />
		     <param name="image_width" value="640" />
   		     <param name="image_height" value="480" />
   		     <param name="pixel_format" value="yuyv" />
    		     <param name="camera_frame_id" value="usb_cam" />
    		     <param name="io_method" value="mmap"/>
	       </node>
	       <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
	       	     <remap from="image" to="usb_cam/image_raw"/>
		     <param name="autosize" value="true" />
		</node>
		<node pkg="opencv_apps" type="face_detection" name="face_detection" output="screen">
		      <remap from="image" to="usb_cam/image_raw"/>
		      <param name="face_cascade_name" value="/usr/share/OpenCV/haarcascades/haarcascade_frontalface_alt.xml" />
		      <param name="eyes_cascade_name" value="/usr/share/OpenCV/haarcascades/haarcascade_eye_tree_eyeglasses.xml" />		      
		</node>
	<!--/group-->
</launch>